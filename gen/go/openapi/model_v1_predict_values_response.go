/*
caraml/upi/v1/upi.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1PredictValuesResponse struct for V1PredictValuesResponse
type V1PredictValuesResponse struct {
	PredictionResultTable *V1Table `json:"predictionResultTable,omitempty"`
	TargetName *string `json:"targetName,omitempty"`
	PredictionContexts []V1Variable `json:"predictionContexts,omitempty"`
	Metadata *V1ResponseMetadata `json:"metadata,omitempty"`
}

// NewV1PredictValuesResponse instantiates a new V1PredictValuesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1PredictValuesResponse() *V1PredictValuesResponse {
	this := V1PredictValuesResponse{}
	return &this
}

// NewV1PredictValuesResponseWithDefaults instantiates a new V1PredictValuesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1PredictValuesResponseWithDefaults() *V1PredictValuesResponse {
	this := V1PredictValuesResponse{}
	return &this
}

// GetPredictionResultTable returns the PredictionResultTable field value if set, zero value otherwise.
func (o *V1PredictValuesResponse) GetPredictionResultTable() V1Table {
	if o == nil || o.PredictionResultTable == nil {
		var ret V1Table
		return ret
	}
	return *o.PredictionResultTable
}

// GetPredictionResultTableOk returns a tuple with the PredictionResultTable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PredictValuesResponse) GetPredictionResultTableOk() (*V1Table, bool) {
	if o == nil || o.PredictionResultTable == nil {
		return nil, false
	}
	return o.PredictionResultTable, true
}

// HasPredictionResultTable returns a boolean if a field has been set.
func (o *V1PredictValuesResponse) HasPredictionResultTable() bool {
	if o != nil && o.PredictionResultTable != nil {
		return true
	}

	return false
}

// SetPredictionResultTable gets a reference to the given V1Table and assigns it to the PredictionResultTable field.
func (o *V1PredictValuesResponse) SetPredictionResultTable(v V1Table) {
	o.PredictionResultTable = &v
}

// GetTargetName returns the TargetName field value if set, zero value otherwise.
func (o *V1PredictValuesResponse) GetTargetName() string {
	if o == nil || o.TargetName == nil {
		var ret string
		return ret
	}
	return *o.TargetName
}

// GetTargetNameOk returns a tuple with the TargetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PredictValuesResponse) GetTargetNameOk() (*string, bool) {
	if o == nil || o.TargetName == nil {
		return nil, false
	}
	return o.TargetName, true
}

// HasTargetName returns a boolean if a field has been set.
func (o *V1PredictValuesResponse) HasTargetName() bool {
	if o != nil && o.TargetName != nil {
		return true
	}

	return false
}

// SetTargetName gets a reference to the given string and assigns it to the TargetName field.
func (o *V1PredictValuesResponse) SetTargetName(v string) {
	o.TargetName = &v
}

// GetPredictionContexts returns the PredictionContexts field value if set, zero value otherwise.
func (o *V1PredictValuesResponse) GetPredictionContexts() []V1Variable {
	if o == nil || o.PredictionContexts == nil {
		var ret []V1Variable
		return ret
	}
	return o.PredictionContexts
}

// GetPredictionContextsOk returns a tuple with the PredictionContexts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PredictValuesResponse) GetPredictionContextsOk() ([]V1Variable, bool) {
	if o == nil || o.PredictionContexts == nil {
		return nil, false
	}
	return o.PredictionContexts, true
}

// HasPredictionContexts returns a boolean if a field has been set.
func (o *V1PredictValuesResponse) HasPredictionContexts() bool {
	if o != nil && o.PredictionContexts != nil {
		return true
	}

	return false
}

// SetPredictionContexts gets a reference to the given []V1Variable and assigns it to the PredictionContexts field.
func (o *V1PredictValuesResponse) SetPredictionContexts(v []V1Variable) {
	o.PredictionContexts = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V1PredictValuesResponse) GetMetadata() V1ResponseMetadata {
	if o == nil || o.Metadata == nil {
		var ret V1ResponseMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PredictValuesResponse) GetMetadataOk() (*V1ResponseMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V1PredictValuesResponse) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V1ResponseMetadata and assigns it to the Metadata field.
func (o *V1PredictValuesResponse) SetMetadata(v V1ResponseMetadata) {
	o.Metadata = &v
}

func (o V1PredictValuesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PredictionResultTable != nil {
		toSerialize["predictionResultTable"] = o.PredictionResultTable
	}
	if o.TargetName != nil {
		toSerialize["targetName"] = o.TargetName
	}
	if o.PredictionContexts != nil {
		toSerialize["predictionContexts"] = o.PredictionContexts
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableV1PredictValuesResponse struct {
	value *V1PredictValuesResponse
	isSet bool
}

func (v NullableV1PredictValuesResponse) Get() *V1PredictValuesResponse {
	return v.value
}

func (v *NullableV1PredictValuesResponse) Set(val *V1PredictValuesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1PredictValuesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1PredictValuesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1PredictValuesResponse(val *V1PredictValuesResponse) *NullableV1PredictValuesResponse {
	return &NullableV1PredictValuesResponse{value: val, isSet: true}
}

func (v NullableV1PredictValuesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1PredictValuesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


