openapi: 3.0.1
info:
  title: caraml/upi/v1/upi.proto
  version: version not set
servers:
- url: /
tags:
- name: UniversalPredictionService
paths:
  /v1/predict:
    post:
      operationId: UniversalPredictionService_PredictValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PredictValuesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PredictValuesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      tags:
      - UniversalPredictionService
      x-codegen-request-body-name: body
components:
  schemas:
    protobufAny:
      additionalProperties:
        type: object
      properties:
        '@type':
          type: string
      type: object
    rpcStatus:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
      type: object
    upiv1Type:
      default: TYPE_UNSPECIFIED
      description: "- TYPE_DOUBLE: Double precision floating number (64-bit)\n - TYPE_INTEGER:\
        \ 64-bit Integer\n - TYPE_STRING: String"
      enum:
      - TYPE_UNSPECIFIED
      - TYPE_DOUBLE
      - TYPE_INTEGER
      - TYPE_STRING
      title: Type supported by UPI
      type: string
    upiv1Value:
      description: Value of a cell within a table. Value is nullable.
      example:
        stringValue: stringValue
        isNull: true
        integerValue: integerValue
        doubleValue: 0.8008281904610115
      properties:
        doubleValue:
          format: double
          title: One of following field will be set depending on the column's type
          type: number
        integerValue:
          format: int64
          type: string
        stringValue:
          type: string
        isNull:
          title: Flag to be used to signify that the value is null
          type: boolean
      type: object
    v1Column:
      example:
        name: name
        type: null
      properties:
        name:
          title: Column's name
          type: string
        type:
          $ref: '#/components/schemas/upiv1Type'
      title: Column represent a column definition within a table
      type: object
    v1ModelMetadata:
      example:
        name: name
        version: version
      properties:
        name:
          title: Model name that produce prediction
          type: string
        version:
          title: Model version that produce prediction
          type: string
      type: object
    v1PredictValuesRequest:
      properties:
        predictionTable:
          $ref: '#/components/schemas/v1Table'
        transformerInput:
          $ref: '#/components/schemas/v1TransformerInput'
        targetName:
          title: |-
            Name of the concept we wish to predict.
            For example in context of iris classification problem it can be "iris-species"
          type: string
        predictionContext:
          items:
            $ref: '#/components/schemas/v1Variable'
          title: "Prediction context may contain additional data applicable to all\
            \ prediction instances\nFor example it can be used to store information\
            \ for traffic rules, experimentation\nor tracking purposes.\nEg. country_code,\
            \ service_type, service_area_id"
          type: array
        metadata:
          $ref: '#/components/schemas/v1RequestMetadata'
      title: Represents a request to predict multiple values
      type: object
    v1PredictValuesResponse:
      example:
        predictionResultTable:
          columns:
          - name: name
            type: null
          - name: name
            type: null
          name: name
          rows:
          - values:
            - stringValue: stringValue
              isNull: true
              integerValue: integerValue
              doubleValue: 0.8008281904610115
            - stringValue: stringValue
              isNull: true
              integerValue: integerValue
              doubleValue: 0.8008281904610115
            rowId: rowId
          - values:
            - stringValue: stringValue
              isNull: true
              integerValue: integerValue
              doubleValue: 0.8008281904610115
            - stringValue: stringValue
              isNull: true
              integerValue: integerValue
              doubleValue: 0.8008281904610115
            rowId: rowId
        targetName: targetName
        metadata:
          models:
          - name: name
            version: version
          - name: name
            version: version
          predictionId: predictionId
          experimentName: experimentName
          treatmentName: treatmentName
        predictionContext:
        - stringValue: stringValue
          name: name
          integerValue: integerValue
          doubleValue: 6.027456183070403
          type: null
        - stringValue: stringValue
          name: name
          integerValue: integerValue
          doubleValue: 6.027456183070403
          type: null
      properties:
        predictionResultTable:
          $ref: '#/components/schemas/v1Table'
        targetName:
          title: Target name as defined in the request metadata
          type: string
        predictionContext:
          items:
            $ref: '#/components/schemas/v1Variable'
          title: Extensible field to cover unforeseen requirements
          type: array
        metadata:
          $ref: '#/components/schemas/v1ResponseMetadata'
      type: object
    v1RequestMetadata:
      properties:
        predictionId:
          title: "Unique identifier for each request. Optional.\nPrediction ID will\
            \ generated by the platform. The user is expected\ninclude the prediction\
            \ ID (along with row ID) when calling\nthe observations API so that predictions\
            \ and observations can be joined.\nPrediction ID is needed because row\
            \ ID may not be globally unique\nacross requests (only locally unique\
            \ within each request).\nIf there are experiments with alternative models,\
            \ the mapping\nfrom prediciton ID to treatment ID will be logged by the\
            \ platform"
          type: string
        requestTimestamp:
          format: date-time
          title: Timestamp of the request
          type: string
      type: object
    v1ResponseMetadata:
      example:
        models:
        - name: name
          version: version
        - name: name
          version: version
        predictionId: predictionId
        experimentName: experimentName
        treatmentName: treatmentName
      properties:
        predictionId:
          title: "Prediction ID generated by the platform. \nThe user is expected\
            \ include the prediction ID (along with row ID) when calling\nthe observations\
            \ API so that predictions and observations can be joined.\nPrediction\
            \ ID is needed because row ID may not be globally unique\nacross requests\
            \ (only locally unique within each request).\nIf there are experiments\
            \ with alternative models, the mapping\nfrom prediciton ID to treatment\
            \ ID will be logged by the platform"
          type: string
        models:
          items:
            $ref: '#/components/schemas/v1ModelMetadata'
          title: "List of model that produces the prediction \nThis field is repeated\
            \ to cater for use case such as ensembling several model production results"
          type: array
        experimentName:
          title: "Name of the experiment that is used to produce the response \nThe\
            \ value might be empty if experimentation is not involved to produce response"
          type: string
        treatmentName:
          title: |-
            Name of the treatment chosen from the experiment to produce the response
            The value might be empty if experimentation is not involved to produce response
          type: string
      type: object
    v1Row:
      example:
        values:
        - stringValue: stringValue
          isNull: true
          integerValue: integerValue
          doubleValue: 0.8008281904610115
        - stringValue: stringValue
          isNull: true
          integerValue: integerValue
          doubleValue: 0.8008281904610115
        rowId: rowId
      properties:
        rowId:
          title: |-
            Id of the particular row in a table.
            The row id should be at least locally unique within the table.
            Row ID must be populated for prediction_table
          type: string
        values:
          description: "List of values within a row. \nIt is table's creator responsibility\
            \ to ensure that the number of entry \nvalues matches with the length\
            \ of columns in the table."
          items:
            $ref: '#/components/schemas/upiv1Value'
          type: array
      title: Row represents list of value stored within a row of a table
      type: object
    v1Table:
      example:
        columns:
        - name: name
          type: null
        - name: name
          type: null
        name: name
        rows:
        - values:
          - stringValue: stringValue
            isNull: true
            integerValue: integerValue
            doubleValue: 0.8008281904610115
          - stringValue: stringValue
            isNull: true
            integerValue: integerValue
            doubleValue: 0.8008281904610115
          rowId: rowId
        - values:
          - stringValue: stringValue
            isNull: true
            integerValue: integerValue
            doubleValue: 0.8008281904610115
          - stringValue: stringValue
            isNull: true
            integerValue: integerValue
            doubleValue: 0.8008281904610115
          rowId: rowId
      properties:
        name:
          title: Table's name
          type: string
        columns:
          description: Columns stores schema informations of all columns in the table.
          items:
            $ref: '#/components/schemas/v1Column'
          type: array
        rows:
          description: Rows stores list of row values in the table.
          items:
            $ref: '#/components/schemas/v1Row'
          type: array
      title: "Table represents a 2D data structure that has one or more columns \n\
        with potentially different types"
      type: object
    v1TransformerInput:
      description: |-
        Transformer input contains additional information that can be used to enrich prediction_table using standard transformer.
        All tables and variables within transformer input will be imported to the standard transformer runtime automatically.
      properties:
        tables:
          description: |-
            List of tables
            All tables must have unique name.
            Each table doesn't need to have same number of row.
          items:
            $ref: '#/components/schemas/v1Table'
          type: array
        variables:
          items:
            $ref: '#/components/schemas/v1Variable'
          title: List of variables
          type: array
      type: object
    v1Variable:
      example:
        stringValue: stringValue
        name: name
        integerValue: integerValue
        doubleValue: 6.027456183070403
        type: null
      properties:
        name:
          title: |-
            Name describing what the value represents.
            Uses include:
            - Ensuring ML models process columns in the correct order
            - Defining a Feast row entity name
            - Parsing metadata to apply traffic rules
          type: string
        type:
          $ref: '#/components/schemas/upiv1Type'
        doubleValue:
          format: double
          title: One of the following field will be set depending on the type
          type: number
        integerValue:
          format: int64
          type: string
        stringValue:
          type: string
      title: "Represents a named and typed data point.\nCan be used as a prediction\
        \ input, output or metadata.\nOneof types are avoided as these can be difficult\
        \ to handle"
      type: object
x-original-swagger-version: "2.0"
