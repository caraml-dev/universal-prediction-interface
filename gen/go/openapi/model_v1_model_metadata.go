/*
caraml/upi/v1/upi.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1ModelMetadata struct for V1ModelMetadata
type V1ModelMetadata struct {
	Name *string `json:"name,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewV1ModelMetadata instantiates a new V1ModelMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ModelMetadata() *V1ModelMetadata {
	this := V1ModelMetadata{}
	return &this
}

// NewV1ModelMetadataWithDefaults instantiates a new V1ModelMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ModelMetadataWithDefaults() *V1ModelMetadata {
	this := V1ModelMetadata{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1ModelMetadata) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ModelMetadata) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1ModelMetadata) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1ModelMetadata) SetName(v string) {
	o.Name = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *V1ModelMetadata) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ModelMetadata) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *V1ModelMetadata) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *V1ModelMetadata) SetVersion(v string) {
	o.Version = &v
}

func (o V1ModelMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableV1ModelMetadata struct {
	value *V1ModelMetadata
	isSet bool
}

func (v NullableV1ModelMetadata) Get() *V1ModelMetadata {
	return v.value
}

func (v *NullableV1ModelMetadata) Set(val *V1ModelMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ModelMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ModelMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ModelMetadata(val *V1ModelMetadata) *NullableV1ModelMetadata {
	return &NullableV1ModelMetadata{value: val, isSet: true}
}

func (v NullableV1ModelMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ModelMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


