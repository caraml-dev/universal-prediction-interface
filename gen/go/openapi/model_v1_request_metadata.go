/*
caraml/upi/v1/upi.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// V1RequestMetadata struct for V1RequestMetadata
type V1RequestMetadata struct {
	PredictionId *string `json:"predictionId,omitempty"`
	RequestTimestamp *time.Time `json:"requestTimestamp,omitempty"`
}

// NewV1RequestMetadata instantiates a new V1RequestMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1RequestMetadata() *V1RequestMetadata {
	this := V1RequestMetadata{}
	return &this
}

// NewV1RequestMetadataWithDefaults instantiates a new V1RequestMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1RequestMetadataWithDefaults() *V1RequestMetadata {
	this := V1RequestMetadata{}
	return &this
}

// GetPredictionId returns the PredictionId field value if set, zero value otherwise.
func (o *V1RequestMetadata) GetPredictionId() string {
	if o == nil || o.PredictionId == nil {
		var ret string
		return ret
	}
	return *o.PredictionId
}

// GetPredictionIdOk returns a tuple with the PredictionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RequestMetadata) GetPredictionIdOk() (*string, bool) {
	if o == nil || o.PredictionId == nil {
		return nil, false
	}
	return o.PredictionId, true
}

// HasPredictionId returns a boolean if a field has been set.
func (o *V1RequestMetadata) HasPredictionId() bool {
	if o != nil && o.PredictionId != nil {
		return true
	}

	return false
}

// SetPredictionId gets a reference to the given string and assigns it to the PredictionId field.
func (o *V1RequestMetadata) SetPredictionId(v string) {
	o.PredictionId = &v
}

// GetRequestTimestamp returns the RequestTimestamp field value if set, zero value otherwise.
func (o *V1RequestMetadata) GetRequestTimestamp() time.Time {
	if o == nil || o.RequestTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.RequestTimestamp
}

// GetRequestTimestampOk returns a tuple with the RequestTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RequestMetadata) GetRequestTimestampOk() (*time.Time, bool) {
	if o == nil || o.RequestTimestamp == nil {
		return nil, false
	}
	return o.RequestTimestamp, true
}

// HasRequestTimestamp returns a boolean if a field has been set.
func (o *V1RequestMetadata) HasRequestTimestamp() bool {
	if o != nil && o.RequestTimestamp != nil {
		return true
	}

	return false
}

// SetRequestTimestamp gets a reference to the given time.Time and assigns it to the RequestTimestamp field.
func (o *V1RequestMetadata) SetRequestTimestamp(v time.Time) {
	o.RequestTimestamp = &v
}

func (o V1RequestMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PredictionId != nil {
		toSerialize["predictionId"] = o.PredictionId
	}
	if o.RequestTimestamp != nil {
		toSerialize["requestTimestamp"] = o.RequestTimestamp
	}
	return json.Marshal(toSerialize)
}

type NullableV1RequestMetadata struct {
	value *V1RequestMetadata
	isSet bool
}

func (v NullableV1RequestMetadata) Get() *V1RequestMetadata {
	return v.value
}

func (v *NullableV1RequestMetadata) Set(val *V1RequestMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableV1RequestMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableV1RequestMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1RequestMetadata(val *V1RequestMetadata) *NullableV1RequestMetadata {
	return &NullableV1RequestMetadata{value: val, isSet: true}
}

func (v NullableV1RequestMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1RequestMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


