# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: caraml/upi/v1/table.proto

require 'google/protobuf'

require 'caraml/upi/v1/type_pb'


descriptor_data = "\n\x19\x63\x61raml/upi/v1/table.proto\x12\rcaraml.upi.v1\x1a\x18\x63\x61raml/upi/v1/type.proto\"t\n\x05Table\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12/\n\x07\x63olumns\x18\x02 \x03(\x0b\x32\x15.caraml.upi.v1.ColumnR\x07\x63olumns\x12&\n\x04rows\x18\x03 \x03(\x0b\x32\x12.caraml.upi.v1.RowR\x04rows\"E\n\x06\x43olumn\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\'\n\x04type\x18\x02 \x01(\x0e\x32\x13.caraml.upi.v1.TypeR\x04type\"J\n\x03Row\x12\x15\n\x06row_id\x18\x01 \x01(\tR\x05rowId\x12,\n\x06values\x18\x02 \x03(\x0b\x32\x14.caraml.upi.v1.ValueR\x06values\"\x8b\x01\n\x05Value\x12!\n\x0c\x64ouble_value\x18\x01 \x01(\x01R\x0b\x64oubleValue\x12#\n\rinteger_value\x18\x02 \x01(\x03R\x0cintegerValue\x12!\n\x0cstring_value\x18\x03 \x01(\tR\x0bstringValue\x12\x17\n\x07is_null\x18\n \x01(\x08R\x06isNullB\xc6\x01\n\x11\x63om.caraml.upi.v1B\nTableProtoP\x01ZOgithub.com/caraml-dev/universal-prediction-interface/gen/go/caraml/upi/v1;upiv1\xa2\x02\x03\x43UX\xaa\x02\rCaraml.Upi.V1\xca\x02\rCaraml\\Upi\\V1\xe2\x02\x19\x43\x61raml\\Upi\\V1\\GPBMetadata\xea\x02\x0f\x43\x61raml::Upi::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Caraml
  module Upi
    module V1
      Table = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("caraml.upi.v1.Table").msgclass
      Column = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("caraml.upi.v1.Column").msgclass
      Row = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("caraml.upi.v1.Row").msgclass
      Value = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("caraml.upi.v1.Value").msgclass
    end
  end
end
